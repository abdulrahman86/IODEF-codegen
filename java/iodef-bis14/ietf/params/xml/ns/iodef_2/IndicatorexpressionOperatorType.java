//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.23 at 09:39:40 PM JST 
//


package ietf.params.xml.ns.iodef_2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for indicatorexpression-operator-type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="indicatorexpression-operator-type"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="not"/&gt;
 *     &lt;enumeration value="and"/&gt;
 *     &lt;enumeration value="or"/&gt;
 *     &lt;enumeration value="xor"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "indicatorexpression-operator-type")
@XmlEnum
public enum IndicatorexpressionOperatorType {

    @XmlEnumValue("not")
    NOT("not"),
    @XmlEnumValue("and")
    AND("and"),
    @XmlEnumValue("or")
    OR("or"),
    @XmlEnumValue("xor")
    XOR("xor");
    private final String value;

    IndicatorexpressionOperatorType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static IndicatorexpressionOperatorType fromValue(String v) {
        for (IndicatorexpressionOperatorType c: IndicatorexpressionOperatorType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
