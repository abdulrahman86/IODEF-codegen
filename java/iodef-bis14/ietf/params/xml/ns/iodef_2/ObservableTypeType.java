//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.11 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.23 at 09:39:40 PM JST 
//


package ietf.params.xml.ns.iodef_2;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for observable-type-type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="observable-type-type"&gt;
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}NMTOKEN"&gt;
 *     &lt;enumeration value="asn"/&gt;
 *     &lt;enumeration value="atm"/&gt;
 *     &lt;enumeration value="e-mail"/&gt;
 *     &lt;enumeration value="ipv4-addr"/&gt;
 *     &lt;enumeration value="ipv4-net"/&gt;
 *     &lt;enumeration value="ipv4-net-mask"/&gt;
 *     &lt;enumeration value="ipv6-addr"/&gt;
 *     &lt;enumeration value="ipv6-net"/&gt;
 *     &lt;enumeration value="ipv6-net-mask"/&gt;
 *     &lt;enumeration value="mac"/&gt;
 *     &lt;enumeration value="site-uri"/&gt;
 *     &lt;enumeration value="fqdn"/&gt;
 *     &lt;enumeration value="doman-name"/&gt;
 *     &lt;enumeration value="domain-to-ipv4"/&gt;
 *     &lt;enumeration value="domain-to-ipv6"/&gt;
 *     &lt;enumeration value="domain-to-ipv4-timestamp"/&gt;
 *     &lt;enumeration value="domain-to-ipv6-timestamp"/&gt;
 *     &lt;enumeration value="ipv4-port"/&gt;
 *     &lt;enumeration value="ipv6-port"/&gt;
 *     &lt;enumeration value="windows-reg-key"/&gt;
 *     &lt;enumeration value="file-hash"/&gt;
 *     &lt;enumeration value="email-x-mailer"/&gt;
 *     &lt;enumeration value="email-subject"/&gt;
 *     &lt;enumeration value="http-user-agent"/&gt;
 *     &lt;enumeration value="http-request-uri"/&gt;
 *     &lt;enumeration value="mutex"/&gt;
 *     &lt;enumeration value="file-path"/&gt;
 *     &lt;enumeration value="user-name"/&gt;
 *   &lt;/restriction&gt;
 * &lt;/simpleType&gt;
 * </pre>
 * 
 */
@XmlType(name = "observable-type-type")
@XmlEnum
public enum ObservableTypeType {

    @XmlEnumValue("asn")
    ASN("asn"),
    @XmlEnumValue("atm")
    ATM("atm"),
    @XmlEnumValue("e-mail")
    E_MAIL("e-mail"),
    @XmlEnumValue("ipv4-addr")
    IPV_4_ADDR("ipv4-addr"),
    @XmlEnumValue("ipv4-net")
    IPV_4_NET("ipv4-net"),
    @XmlEnumValue("ipv4-net-mask")
    IPV_4_NET_MASK("ipv4-net-mask"),
    @XmlEnumValue("ipv6-addr")
    IPV_6_ADDR("ipv6-addr"),
    @XmlEnumValue("ipv6-net")
    IPV_6_NET("ipv6-net"),
    @XmlEnumValue("ipv6-net-mask")
    IPV_6_NET_MASK("ipv6-net-mask"),
    @XmlEnumValue("mac")
    MAC("mac"),
    @XmlEnumValue("site-uri")
    SITE_URI("site-uri"),
    @XmlEnumValue("fqdn")
    FQDN("fqdn"),
    @XmlEnumValue("doman-name")
    DOMAN_NAME("doman-name"),
    @XmlEnumValue("domain-to-ipv4")
    DOMAIN_TO_IPV_4("domain-to-ipv4"),
    @XmlEnumValue("domain-to-ipv6")
    DOMAIN_TO_IPV_6("domain-to-ipv6"),
    @XmlEnumValue("domain-to-ipv4-timestamp")
    DOMAIN_TO_IPV_4_TIMESTAMP("domain-to-ipv4-timestamp"),
    @XmlEnumValue("domain-to-ipv6-timestamp")
    DOMAIN_TO_IPV_6_TIMESTAMP("domain-to-ipv6-timestamp"),
    @XmlEnumValue("ipv4-port")
    IPV_4_PORT("ipv4-port"),
    @XmlEnumValue("ipv6-port")
    IPV_6_PORT("ipv6-port"),
    @XmlEnumValue("windows-reg-key")
    WINDOWS_REG_KEY("windows-reg-key"),
    @XmlEnumValue("file-hash")
    FILE_HASH("file-hash"),
    @XmlEnumValue("email-x-mailer")
    EMAIL_X_MAILER("email-x-mailer"),
    @XmlEnumValue("email-subject")
    EMAIL_SUBJECT("email-subject"),
    @XmlEnumValue("http-user-agent")
    HTTP_USER_AGENT("http-user-agent"),
    @XmlEnumValue("http-request-uri")
    HTTP_REQUEST_URI("http-request-uri"),
    @XmlEnumValue("mutex")
    MUTEX("mutex"),
    @XmlEnumValue("file-path")
    FILE_PATH("file-path"),
    @XmlEnumValue("user-name")
    USER_NAME("user-name");
    private final String value;

    ObservableTypeType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static ObservableTypeType fromValue(String v) {
        for (ObservableTypeType c: ObservableTypeType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
